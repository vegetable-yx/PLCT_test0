Sun Jan  1 22:36:06 2023 - INFO  - Start environmental preparation.
Sun Jan  1 22:36:59 2023 - INFO  - End of environmental preparation!
Sun Jan  1 22:37:00 2023 - INFO  - Start testing...
keyctl from keyutils-1.6.3 (Built 2022-07-29)
have_capabilities=1
73623566
 73623566: --alswrv     0     0 user: mykey:hello
73623566
request_key: Required key not available
Format:
  keyctl --version 
  keyctl add [-x] <type> <desc> <data> <keyring>
  keyctl chgrp <key> <gid>
  keyctl chown <key> <uid>
  keyctl clear <keyring>
  keyctl describe <keyring>
  keyctl dh_compute <private> <prime> <base>
  keyctl dh_compute_kdf <private> <prime> <base> <len> <hash_name>
  keyctl dh_compute_kdf_oi [-x] <private> <prime> <base> <len> <hash_name>
  keyctl get_persistent <keyring> [<uid>]
  keyctl id <key>
  keyctl instantiate [-x] <key> <data> <keyring>
  keyctl invalidate <key>
  keyctl link <key> <keyring>
  keyctl list <keyring>
  keyctl move [-f] <key> <from_keyring> <to_keyring>
  keyctl negate <key> <timeout> <keyring>
  keyctl new_session [<name>]
  keyctl newring <name> <keyring>
  keyctl padd [-x] <type> <desc> <keyring>
  keyctl pinstantiate [-x] <key> <keyring>
  keyctl pipe <key>
  keyctl pkey_query <key> <pass> [k=v]*
  keyctl pkey_encrypt <key> <pass> <datafile> [k=v]*
  keyctl pkey_decrypt <key> <pass> <datafile> [k=v]*
  keyctl pkey_sign <key> <pass> <datafile> [k=v]*
  keyctl pkey_verify <key> <pass> <datafile> <sigfile> [k=v]*
  keyctl prequest2 <type> <desc> [<dest_keyring>]
  keyctl print <key>
  keyctl pupdate [-x] <key>
  keyctl purge <type>
  keyctl purge [-p] [-i] <type> <desc>
  keyctl purge -s <type> <desc>
  keyctl rdescribe <keyring> [sep]
  keyctl read <key>
  keyctl reap [-v]
  keyctl reject <key> <timeout> <error> <keyring>
  keyctl request <type> <desc> [<dest_keyring>]
  keyctl request2 <type> <desc> <info> [<dest_keyring>]
  keyctl restrict_keyring <keyring> [<type> [<restriction>]]
  keyctl revoke <key>
  keyctl rlist <keyring>
  keyctl search <keyring> <type> <desc> [<dest_keyring>]
  keyctl security <key>
  keyctl session 
  keyctl session - [<prog> <arg1> <arg2> ...]
  keyctl session <name> [<prog> <arg1> <arg2> ...]
  keyctl setperm <key> <mask>
  keyctl show [-x] [<keyring>]
  keyctl supports [<cap> | --raw]
  keyctl timeout <key> <timeout>
  keyctl unlink <key> [<keyring>]
  keyctl update [-x] <key> <data>
  keyctl watch [-f<filters>] <key>
  keyctl watch_add <fd> <key>
  keyctl watch_rm <fd> <key>
  keyctl watch_session [-f<filters>] [-n <name>] <notifylog> <gclog> <fd> <prog> [<arg1> <arg2> ...]
  keyctl watch_sync <fd>
  keyctl --test ...

Key/keyring ID:
  <nnn>   numeric keyring ID
  @t      thread keyring
  @p      process keyring
  @s      session keyring
  @u      user keyring
  @us     user default session keyring
  @g      group keyring
  @a      assumed request_key authorisation key

<type> can be "user" for a user-defined keyring
If you do this, prefix the description with "<subtype>:"
Format:
  keyctl --version 
  keyctl add [-x] <type> <desc> <data> <keyring>
  keyctl chgrp <key> <gid>
  keyctl chown <key> <uid>
  keyctl clear <keyring>
  keyctl describe <keyring>
  keyctl dh_compute <private> <prime> <base>
  keyctl dh_compute_kdf <private> <prime> <base> <len> <hash_name>
  keyctl dh_compute_kdf_oi [-x] <private> <prime> <base> <len> <hash_name>
  keyctl get_persistent <keyring> [<uid>]
  keyctl id <key>
  keyctl instantiate [-x] <key> <data> <keyring>
  keyctl invalidate <key>
  keyctl link <key> <keyring>
  keyctl list <keyring>
  keyctl move [-f] <key> <from_keyring> <to_keyring>
  keyctl negate <key> <timeout> <keyring>
  keyctl new_session [<name>]
  keyctl newring <name> <keyring>
  keyctl padd [-x] <type> <desc> <keyring>
  keyctl pinstantiate [-x] <key> <keyring>
  keyctl pipe <key>
  keyctl pkey_query <key> <pass> [k=v]*
  keyctl pkey_encrypt <key> <pass> <datafile> [k=v]*
  keyctl pkey_decrypt <key> <pass> <datafile> [k=v]*
  keyctl pkey_sign <key> <pass> <datafile> [k=v]*
  keyctl pkey_verify <key> <pass> <datafile> <sigfile> [k=v]*
  keyctl prequest2 <type> <desc> [<dest_keyring>]
  keyctl print <key>
  keyctl pupdate [-x] <key>
  keyctl purge <type>
  keyctl purge [-p] [-i] <type> <desc>
  keyctl purge -s <type> <desc>
  keyctl rdescribe <keyring> [sep]
  keyctl read <key>
  keyctl reap [-v]
  keyctl reject <key> <timeout> <error> <keyring>
  keyctl request <type> <desc> [<dest_keyring>]
  keyctl request2 <type> <desc> <info> [<dest_keyring>]
  keyctl restrict_keyring <keyring> [<type> [<restriction>]]
  keyctl revoke <key>
  keyctl rlist <keyring>
  keyctl search <keyring> <type> <desc> [<dest_keyring>]
  keyctl security <key>
  keyctl session 
  keyctl session - [<prog> <arg1> <arg2> ...]
  keyctl session <name> [<prog> <arg1> <arg2> ...]
  keyctl setperm <key> <mask>
  keyctl show [-x] [<keyring>]
  keyctl supports [<cap> | --raw]
  keyctl timeout <key> <timeout>
  keyctl unlink <key> [<keyring>]
  keyctl update [-x] <key> <data>
  keyctl watch [-f<filters>] <key>
  keyctl watch_add <fd> <key>
  keyctl watch_rm <fd> <key>
  keyctl watch_session [-f<filters>] [-n <name>] <notifylog> <gclog> <fd> <prog> [<arg1> <arg2> ...]
  keyctl watch_sync <fd>
  keyctl --test ...

Key/keyring ID:
  <nnn>   numeric keyring ID
  @t      thread keyring
  @p      process keyring
  @s      session keyring
  @u      user keyring
  @us     user default session keyring
  @g      group keyring
  @a      assumed request_key authorisation key

<type> can be "user" for a user-defined keyring
If you do this, prefix the description with "<subtype>:"
Sun Jan  1 22:37:02 2023 - ERROR - keyctl update failed
Sun Jan  1 22:37:03 2023 - ERROR - oe_test_keyutils-keyctl.sh line 42
Format:
  keyctl --version 
  keyctl add [-x] <type> <desc> <data> <keyring>
  keyctl chgrp <key> <gid>
  keyctl chown <key> <uid>
  keyctl clear <keyring>
  keyctl describe <keyring>
  keyctl dh_compute <private> <prime> <base>
  keyctl dh_compute_kdf <private> <prime> <base> <len> <hash_name>
  keyctl dh_compute_kdf_oi [-x] <private> <prime> <base> <len> <hash_name>
  keyctl get_persistent <keyring> [<uid>]
  keyctl id <key>
  keyctl instantiate [-x] <key> <data> <keyring>
  keyctl invalidate <key>
  keyctl link <key> <keyring>
  keyctl list <keyring>
  keyctl move [-f] <key> <from_keyring> <to_keyring>
  keyctl negate <key> <timeout> <keyring>
  keyctl new_session [<name>]
  keyctl newring <name> <keyring>
  keyctl padd [-x] <type> <desc> <keyring>
  keyctl pinstantiate [-x] <key> <keyring>
  keyctl pipe <key>
  keyctl pkey_query <key> <pass> [k=v]*
  keyctl pkey_encrypt <key> <pass> <datafile> [k=v]*
  keyctl pkey_decrypt <key> <pass> <datafile> [k=v]*
  keyctl pkey_sign <key> <pass> <datafile> [k=v]*
  keyctl pkey_verify <key> <pass> <datafile> <sigfile> [k=v]*
  keyctl prequest2 <type> <desc> [<dest_keyring>]
  keyctl print <key>
  keyctl pupdate [-x] <key>
  keyctl purge <type>
  keyctl purge [-p] [-i] <type> <desc>
  keyctl purge -s <type> <desc>
  keyctl rdescribe <keyring> [sep]
  keyctl read <key>
  keyctl reap [-v]
  keyctl reject <key> <timeout> <error> <keyring>
  keyctl request <type> <desc> [<dest_keyring>]
  keyctl request2 <type> <desc> <info> [<dest_keyring>]
  keyctl restrict_keyring <keyring> [<type> [<restriction>]]
  keyctl revoke <key>
  keyctl rlist <keyring>
  keyctl search <keyring> <type> <desc> [<dest_keyring>]
  keyctl security <key>
  keyctl session 
  keyctl session - [<prog> <arg1> <arg2> ...]
  keyctl session <name> [<prog> <arg1> <arg2> ...]
  keyctl setperm <key> <mask>
  keyctl show [-x] [<keyring>]
  keyctl supports [<cap> | --raw]
  keyctl timeout <key> <timeout>
  keyctl unlink <key> [<keyring>]
  keyctl update [-x] <key> <data>
  keyctl watch [-f<filters>] <key>
  keyctl watch_add <fd> <key>
  keyctl watch_rm <fd> <key>
  keyctl watch_session [-f<filters>] [-n <name>] <notifylog> <gclog> <fd> <prog> [<arg1> <arg2> ...]
  keyctl watch_sync <fd>
  keyctl --test ...

Key/keyring ID:
  <nnn>   numeric keyring ID
  @t      thread keyring
  @p      process keyring
  @s      session keyring
  @u      user keyring
  @us     user default session keyring
  @g      group keyring
  @a      assumed request_key authorisation key

<type> can be "user" for a user-defined keyring
If you do this, prefix the description with "<subtype>:"
Sun Jan  1 22:37:05 2023 - ERROR - keyctl revoke failed
Sun Jan  1 22:37:06 2023 - ERROR - oe_test_keyutils-keyctl.sh line 44
Sun Jan  1 22:37:07 2023 - INFO  - Finish testing!
Sun Jan  1 22:37:08 2023 - ERROR - failed to execute the case.
Sun Jan  1 22:37:10 2023 - INFO  - start environment cleanup.
Sun Jan  1 22:37:30 2023 - INFO  - Finish environment cleanup!
